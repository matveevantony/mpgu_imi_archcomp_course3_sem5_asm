.MODEL SMALL                ; код вмещается в один сегмент памяти
.STACK 100h                 ; на выполнение программы выделяется 256 бит

.CODE                       ; сегмент кода
begin:                      ; метка входа в программу
    mov CX, 256             ; задание числа повторений тела цикла
    
    mov AH, 2h              ; задание номера команды и первого выводимого символа
    mov DL, 0

    cycle:                  ; начало тела цикла
        int 21h             ; вывод символа в консоль
        inc DL              ; увеличение кода символа на единицу

        push DX             ; сохранение в стеке кода текущего символа
        mov DL, ' '         ; вывод пробела
        int 21h
        pop DX              ; возвращение в регистр кода текущего символа

        test DL, 0Fh        ; проверка код символа на делимость на 16 (00001111b)
        jz nline            ; если условие выполнено, переходим на новую строку
        back:               ; метка для возвращения из условного блока
    loop cycle              

    mov AX, 4C00h           ; выход из программы
    int 21h

    nline:                  ; условный блок
        push DX             ; сохранение в стеке кода текущего символа
        mov DL, 10          ; переход на следующую строку
        int 21h
        mov DL, 13
        int 21h
        pop DX              ; возвращение в регистр кода текущего символа
        jmp back            ; выход из условного блока
END begin                   ; завершение программы